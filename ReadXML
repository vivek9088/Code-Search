package sampleplugin.views;

import java.io.File;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class ReadXml {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		 try {
			 
				File fXmlFile = new File("CodeDB/repository.xml");
				DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
				DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
				Document doc = dBuilder.parse(fXmlFile);
			 
				//optional, but recommended
				//read this - http://stackoverflow.com/questions/13786607/normalization-in-dom-parsing-with-java-how-does-it-work
				doc.getDocumentElement().normalize();
			 
				System.out.println("Root element :" + doc.getDocumentElement().getNodeName());
			 
				NodeList nList = doc.getElementsByTagName("Code");
			 
				System.out.println("----------------------------");
			 
				for (int temp = 0; temp < nList.getLength(); temp++) {
			 
					Node nNode = nList.item(temp);
						 
					if (nNode.getNodeType() == Node.ELEMENT_NODE) {
			 
						Element eElement = (Element) nNode;
			 
						System.out.println("Code id : " + eElement.getAttribute("id"));
						System.out.println("Tag : " + eElement.getElementsByTagName("Tag").item(0).getTextContent());
						System.out.println("Code Snippet : " + eElement.getElementsByTagName("Snippet").item(0).getTextContent());
						}
				}
			    } catch (Exception e) {
				e.printStackTrace();
			    }
	}

}

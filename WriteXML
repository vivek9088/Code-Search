/**
 * 
 */
package sampleplugin.views;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.StringWriter;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

/**
 * @author vinod
 *
 */
public class WriteXML {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		
		DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();
        DocumentBuilder docBuilder = null;
		
        try {
			docBuilder = builderFactory.newDocumentBuilder();
		} catch (ParserConfigurationException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
        Document doc = docBuilder.newDocument();
        File file = new File("CodeDB/repository.xml");
        Element root1;
        if(file.exists())
        {
         
        	try {
				doc = docBuilder.parse(file);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} 
        	root1 = doc.getDocumentElement(); 

            Element child = doc.createElement("Code");
            child.setAttribute("id",Double.toString((Math.random()*10)));
            root1.appendChild(child);
           
            Element child1 = doc.createElement("Tag");
            child1.appendChild(doc.createTextNode("JButton"));
            child.appendChild(child1);
            
            Element child4 = doc.createElement("Snippet");
            child4.appendChild(doc.createTextNode(Double.toString(Math.random()*50)));
            child.appendChild(child4);
        }
        else
        {
        
	Element root = doc.createElement("CodeSnippet");
  doc.appendChild(root);

  Element child = doc.createElement("Code");
  child.setAttribute("id",Double.toString((Math.random()*10)));
  root.appendChild(child);
 
  Element child1 = doc.createElement("Tag");
  child1.appendChild(doc.createTextNode("JButton"));
  child.appendChild(child1);
  
  Element child4 = doc.createElement("Snippet");
  child4.appendChild(doc.createTextNode(Double.toString(Math.random()*50)));
  child.appendChild(child4);
        }
try
{
  TransformerFactory factory = TransformerFactory.newInstance();
  Transformer transformer = factory.newTransformer();

  transformer.setOutputProperty(OutputKeys.INDENT, "yes");
  transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "3");
  
  StringWriter sw = new StringWriter();
  StreamResult result = new StreamResult(sw);
  DOMSource source = new DOMSource(doc);
  transformer.transform(source, result);
  String xmlString = sw.toString();

  BufferedWriter bw = new BufferedWriter(new FileWriter(file));
  bw.write(xmlString);
  bw.flush();
  bw.close();
}
catch(Exception e){}

	}

}
